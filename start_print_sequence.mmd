sequenceDiagram
    participant User
    participant MainWindow
    participant Controller
    participant ImageProcessor
    participant DisplayWindow
    
    User->>MainWindow: Click "Start Print" button
    MainWindow->>Controller: start_print() signal
    
    Controller->>Controller: Check if loaded_image exists
    alt No image loaded
        Controller->>MainWindow: update_processing_summary("Please load an image first.")
        Controller-->>User: Return early
    end
    
    Controller->>Controller: Check if loaded_lut exists
    alt No LUT loaded
        Controller->>MainWindow: update_processing_summary("Please select a LUT first.")
        Controller-->>User: Return early
    end
    
    Controller->>MainWindow: update_processing_summary("Processing image...")
    
    Controller->>ImageProcessor: apply_lut(loaded_image, loaded_lut)
    ImageProcessor-->>Controller: processed_image
    Controller->>MainWindow: update_processing_summary("LUT applied.")
    
    Controller->>ImageProcessor: invert_image(processed_image)
    ImageProcessor-->>Controller: inverted_image
    Controller->>MainWindow: update_processing_summary("Image inverted.")
    
    Controller->>ImageProcessor: emulate_12bit_to_8bit_frames(inverted_image)
    ImageProcessor-->>Controller: frames_8bit[]
    Controller->>MainWindow: update_processing_summary("Generated X 8-bit frames...")
    
    Controller->>MainWindow: Get exposure_input.text()
    MainWindow-->>Controller: exposure_duration_str
    Controller->>Controller: Parse exposure duration to loop_duration_ms
    
    Controller->>DisplayWindow: set_frames(frames_8bit, loop_duration_ms)
    Controller->>DisplayWindow: show_on_secondary_monitor()
    Controller->>DisplayWindow: start_display_loop()
    
    DisplayWindow->>DisplayWindow: Start frame timer
    DisplayWindow->>User: Display frames on secondary monitor
